{
  "permissions": {
    "allow": [
      "Bash(make:*)",
      "Bash(git commit:*)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      "Bash(git stash push:*)",
      "Bash(git stash show:*)",
      "Bash(git reset:*)",
      "Bash(git merge:*)",
      "Bash(git fetch:*)",
      "Bash(git restore:*)",
      "Bash(git diff:*)",
      "Bash(git pull:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git rm:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Bash(gh api:*)",
      "WebFetch(domain:github.com)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(poetry lock:*)",
      "Bash(poetry run mypy:*)",
      "Bash(poetry add:*)",
      "Bash(ruff check:*)",
      "Bash(python -m mypy:*)",
      "Bash(docker logs:*)",
      "Bash(docker ps:*)",
      "Bash(docker images:*)",
      "Bash(docker build:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "Bash(docker exec:*)",
      "Bash(docker cp:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker container rm:*)",
      "Bash(docker volume:*)",
      "Bash(timeout 60 make lint-all)",
      "Bash(timeout 60 make gh-watch-checks)",
      "Bash(timeout 120 make gh-watch-checks)",
      "Bash(timeout 180 make gh-watch-checks)",
      "Bash(timeout 300 make dev)",
      "Bash(time make:*)",
      "Bash(time docker build:*)",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(cat:*)",
      "Bash(tree:*)",
      "Bash(test:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(awk:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(xargs:*)",
      "Bash(xargs ls:*)",
      "Bash(echo \"LINT_STATUS=$?\")",
      "Bash(echo \"TEST_STATUS=$?\")",
      "Bash(echo \"Processing $file\")",
      "Bash(if [ -d \".ai\" ])",
      "Bash(then echo \"âœ… Found .ai directory at project root\")",
      "Bash(else echo \"ERROR: .ai directory not found\")",
      "Bash(fi)",
      "Bash(while IFS=: read file line rest)",
      "Bash(do echo \"$file:$line\")",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(done)",
      "Bash([ -x .git/hooks/pre-push ])",
      "Bash(sh)",
      "Bash(. .env)",
      "Bash(source .env)"
    ],
    "deny": [
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(python -m:*)",
      "Bash(python3 -m:*)",
      "Bash(PYTHONPATH=:*python:*)",
      "Bash(pip install:*)",
      "Bash(pip3 install:*)",
      "Bash(python -m pip install:*)",
      "Bash(python3 -m pip install:*)",
      "Bash(pipx install:*)",
      "Bash(easy_install:*)",
      "Bash(conda install:*)",
      "Bash(mamba install:*)",
      "Bash(poetry add --group dev:*)",
      "Bash(poetry install:*)",
      "Bash(apt install python:*)",
      "Bash(apt-get install python:*)",
      "Bash(brew install python:*)",
      "Bash(yum install python:*)",
      "Bash(dnf install python:*)",
      "Bash(pacman -S python:*)",
      "Bash(pip download:*)",
      "Bash(pip wheel:*)",
      "Bash(python setup.py install:*)",
      "Bash(python3 setup.py install:*)"
    ],
    "ask": [
      "Bash(pip uninstall:*)",
      "Bash(gh pr create:*)",
      "Bash(git commit --no-verify:*)",
      "Bash(git push --no-verify:*)",
      "Bash(git commit:*--no-verify:*)",
      "Bash(git push:*--no-verify:*)",
      "Bash(SKIP=:*)",
      "Bash(sudo rm:*)",
      "Bash(sudo:*)",
      "Bash(rm -rf:*)"
    ]
  }
}