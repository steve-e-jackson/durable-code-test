/*
Purpose: Control panel component styles for oscilloscope demo interface
Scope: CSS module styles for control panel layout, buttons, and interactive elements
Overview: Comprehensive styling for the main control panel component including control
    button layouts, hover states, focus accessibility, and disabled state handling.
    Implements responsive design patterns with proper spacing using design system tokens.
    Provides interactive feedback through transforms and transitions for better user
    experience. Includes specialized styling for pause state indication and button grouping.
Dependencies: CSS custom properties from design system for spacing, colors, and typography
Exports: Control panel styling classes for container, control rows, and button states
Interfaces: CSS class selectors for container, controlRow, controlButton, and state modifiers
Environment: Modern browsers supporting CSS transforms, transitions, and custom properties
Related: ControlPanel React component and design system spacing/color tokens
Implementation: CSS Modules with design system integration and accessibility-focused styling
*/

.container {
  margin-top: var(--space-5, 20px);
  display: flex;
  flex-direction: column;
  gap: var(--space-5, 20px);
}

.controlRow {
  display: flex;
  gap: var(--space-2, 10px);
  margin-bottom: var(--space-3, 15px);
  flex-wrap: wrap;
}

.controlButton {
  padding: var(--space-2) var(--space-4);
  background: var(--color-surface-variant, #555);
  color: var(--color-text-primary, white);
  border: none;
  border-radius: var(--border-radius-sm, 5px);
  cursor: pointer;
  font-size: var(--font-size-sm, 14px);
  font-weight: var(--font-weight-medium, 500);
  transition: all 0.2s ease;
  min-width: 100px;
}

.controlButton:active {
  transform: translateY(0);
}

.controlButton:focus {
  outline: 2px solid var(--color-primary, #00a86b);
  outline-offset: 2px;
}

.controlButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.controlButton:hover:not(:disabled) {
  background: var(--color-surface-hover, #666);
  transform: translateY(-1px);
}

.controlButton.paused {
  background: #ffa500;
  color: white;
}

.controlButton.paused:hover:not(:disabled) {
  background: #ffb733;
}
