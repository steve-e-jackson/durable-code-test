# Makefile.gh - GitHub Integration Targets (Required by /done command)

.PHONY: gh-watch-checks gh-check-details

# Variables
GH_PR_NUMBER := $(shell gh pr view --json number -q .number 2>/dev/null)
GH_CURRENT_BRANCH := $(shell git branch --show-current)

# Colors
GH_GREEN = \033[0;32m
GH_YELLOW = \033[0;33m
GH_RED = \033[0;31m
GH_CYAN = \033[0;36m
GH_NC = \033[0m

# Required by /done command - Watch GitHub checks
gh-watch-checks: ## Watch GitHub checks (required by /done command)
	@echo "$(GH_YELLOW)⏱️  NOTE: GitHub checks may take up to 3 minutes to start$(GH_NC)"
	@GH_CHECK_INTERVAL=5 GH_BASE_BRANCH=main \
		./scripts/gh-watch-checks.sh $(GH_PR_NUMBER)

# Required by /done command - Show check failures
gh-check-details: ## Show detailed logs for failed checks (used by /done)
	@if [ -z "$(GH_PR_NUMBER)" ]; then \
		echo "$(GH_RED)❌ No PR found for current branch$(GH_NC)"; \
		exit 1; \
	fi
	@echo "$(GH_CYAN)Fetching detailed check information for PR #$(GH_PR_NUMBER)...$(GH_NC)"
	@echo ""
	@failed_checks=$$(gh pr checks $(GH_PR_NUMBER) --json name,conclusion,detailsUrl | jq -r '.[] | select(.conclusion == "failure") | .name'); \
	if [ -z "$$failed_checks" ]; then \
		echo "$(GH_GREEN)✅ No failed checks found$(GH_NC)"; \
	else \
		echo "$(GH_RED)Failed checks:$(GH_NC)"; \
		echo "$$failed_checks" | while read -r check; do \
			echo ""; \
			echo "$(GH_RED)❌ $$check$(GH_NC)"; \
			echo "$(GH_YELLOW)Fetching logs...$(GH_NC)"; \
			run_id=$$(gh run list --branch $(GH_CURRENT_BRANCH) --json name,databaseId,conclusion | jq -r ".[] | select(.name == \"$$check\" and .conclusion == \"failure\") | .databaseId" | head -1); \
			if [ -n "$$run_id" ]; then \
				gh run view $$run_id --log-failed 2>/dev/null | head -50 || echo "$(GH_YELLOW)Unable to fetch logs$(GH_NC)"; \
			else \
				echo "$(GH_YELLOW)Run ID not found for this check$(GH_NC)"; \
			fi; \
			echo "────────────────────────────────────────"; \
		done; \
	fi